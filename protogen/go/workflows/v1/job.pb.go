// The externally facing API allowing users to interact with jobs.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: workflows/v1/job.proto

package workflowsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The theme in which to render a workflow diagram
type WorkflowDiagramTheme int32

const (
	WorkflowDiagramTheme_WORKFLOW_DIAGRAM_THEME_UNSPECIFIED   WorkflowDiagramTheme = 0
	WorkflowDiagramTheme_WORKFLOW_DIAGRAM_THEME_LIGHT         WorkflowDiagramTheme = 1
	WorkflowDiagramTheme_WORKFLOW_DIAGRAM_THEME_DARK          WorkflowDiagramTheme = 2
	WorkflowDiagramTheme_WORKFLOW_DIAGRAM_THEME_CONSOLE_LIGHT WorkflowDiagramTheme = 3
	WorkflowDiagramTheme_WORKFLOW_DIAGRAM_THEME_CONSOLE_DARK  WorkflowDiagramTheme = 4
)

// Enum value maps for WorkflowDiagramTheme.
var (
	WorkflowDiagramTheme_name = map[int32]string{
		0: "WORKFLOW_DIAGRAM_THEME_UNSPECIFIED",
		1: "WORKFLOW_DIAGRAM_THEME_LIGHT",
		2: "WORKFLOW_DIAGRAM_THEME_DARK",
		3: "WORKFLOW_DIAGRAM_THEME_CONSOLE_LIGHT",
		4: "WORKFLOW_DIAGRAM_THEME_CONSOLE_DARK",
	}
	WorkflowDiagramTheme_value = map[string]int32{
		"WORKFLOW_DIAGRAM_THEME_UNSPECIFIED":   0,
		"WORKFLOW_DIAGRAM_THEME_LIGHT":         1,
		"WORKFLOW_DIAGRAM_THEME_DARK":          2,
		"WORKFLOW_DIAGRAM_THEME_CONSOLE_LIGHT": 3,
		"WORKFLOW_DIAGRAM_THEME_CONSOLE_DARK":  4,
	}
)

func (x WorkflowDiagramTheme) Enum() *WorkflowDiagramTheme {
	p := new(WorkflowDiagramTheme)
	*p = x
	return p
}

func (x WorkflowDiagramTheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowDiagramTheme) Descriptor() protoreflect.EnumDescriptor {
	return file_workflows_v1_job_proto_enumTypes[0].Descriptor()
}

func (WorkflowDiagramTheme) Type() protoreflect.EnumType {
	return &file_workflows_v1_job_proto_enumTypes[0]
}

func (x WorkflowDiagramTheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowDiagramTheme.Descriptor instead.
func (WorkflowDiagramTheme) EnumDescriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{0}
}

// SubmitJobRequest submits and schedules a job for execution. The job can have multiple root tasks.
type SubmitJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The root tasks for the job.
	Tasks []*TaskSubmission `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	// The name of the job.
	JobName string `protobuf:"bytes,2,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	// Tracing information for the job. This is used to propagate tracing information to the workers that execute the job.
	TraceParent string `protobuf:"bytes,3,opt,name=trace_parent,json=traceParent,proto3" json:"trace_parent,omitempty"`
	// Optional. The ID of the automation that submits this job.
	AutomationId  *UUID `protobuf:"bytes,4,opt,name=automation_id,json=automationId,proto3" json:"automation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitJobRequest) Reset() {
	*x = SubmitJobRequest{}
	mi := &file_workflows_v1_job_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitJobRequest) ProtoMessage() {}

func (x *SubmitJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitJobRequest.ProtoReflect.Descriptor instead.
func (*SubmitJobRequest) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitJobRequest) GetTasks() []*TaskSubmission {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *SubmitJobRequest) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *SubmitJobRequest) GetTraceParent() string {
	if x != nil {
		return x.TraceParent
	}
	return ""
}

func (x *SubmitJobRequest) GetAutomationId() *UUID {
	if x != nil {
		return x.AutomationId
	}
	return nil
}

// GetJobRequest requests details for a job.
type GetJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the job to get details for.
	JobId         *UUID `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobRequest) Reset() {
	*x = GetJobRequest{}
	mi := &file_workflows_v1_job_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRequest) ProtoMessage() {}

func (x *GetJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRequest.ProtoReflect.Descriptor instead.
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{1}
}

func (x *GetJobRequest) GetJobId() *UUID {
	if x != nil {
		return x.JobId
	}
	return nil
}

// RetryJobRequest requests a retry of a job that has failed.
type RetryJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The job to retry.
	JobId         *UUID `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryJobRequest) Reset() {
	*x = RetryJobRequest{}
	mi := &file_workflows_v1_job_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryJobRequest) ProtoMessage() {}

func (x *RetryJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryJobRequest.ProtoReflect.Descriptor instead.
func (*RetryJobRequest) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{2}
}

func (x *RetryJobRequest) GetJobId() *UUID {
	if x != nil {
		return x.JobId
	}
	return nil
}

// RetryJobResponse is the response to a RetryJobRequest.
type RetryJobResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of tasks that were rescheduled.
	NumTasksRescheduled int64 `protobuf:"varint,1,opt,name=num_tasks_rescheduled,json=numTasksRescheduled,proto3" json:"num_tasks_rescheduled,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RetryJobResponse) Reset() {
	*x = RetryJobResponse{}
	mi := &file_workflows_v1_job_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryJobResponse) ProtoMessage() {}

func (x *RetryJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryJobResponse.ProtoReflect.Descriptor instead.
func (*RetryJobResponse) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{3}
}

func (x *RetryJobResponse) GetNumTasksRescheduled() int64 {
	if x != nil {
		return x.NumTasksRescheduled
	}
	return 0
}

// CancelJobRequest requests a cancel of a job.
type CancelJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The job to cancel.
	JobId         *UUID `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelJobRequest) Reset() {
	*x = CancelJobRequest{}
	mi := &file_workflows_v1_job_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobRequest) ProtoMessage() {}

func (x *CancelJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobRequest.ProtoReflect.Descriptor instead.
func (*CancelJobRequest) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{4}
}

func (x *CancelJobRequest) GetJobId() *UUID {
	if x != nil {
		return x.JobId
	}
	return nil
}

// CancelJobResponse is the response to a CancelJobRequest.
type CancelJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelJobResponse) Reset() {
	*x = CancelJobResponse{}
	mi := &file_workflows_v1_job_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobResponse) ProtoMessage() {}

func (x *CancelJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobResponse.ProtoReflect.Descriptor instead.
func (*CancelJobResponse) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{5}
}

// VisualizeJobRequest requests a visualization of a job.
type VisualizeJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The job to visualize.
	JobId *UUID `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// The options for rendering the diagram
	RenderOptions *RenderOptions `protobuf:"bytes,2,opt,name=render_options,json=renderOptions,proto3" json:"render_options,omitempty"`
	// The theme to render the workflow diagram in
	Theme WorkflowDiagramTheme `protobuf:"varint,3,opt,name=theme,proto3,enum=workflows.v1.WorkflowDiagramTheme" json:"theme,omitempty"`
	// whether to include the job name as title in the diagram
	IncludeJobName bool `protobuf:"varint,4,opt,name=include_job_name,json=includeJobName,proto3" json:"include_job_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VisualizeJobRequest) Reset() {
	*x = VisualizeJobRequest{}
	mi := &file_workflows_v1_job_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VisualizeJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisualizeJobRequest) ProtoMessage() {}

func (x *VisualizeJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisualizeJobRequest.ProtoReflect.Descriptor instead.
func (*VisualizeJobRequest) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{6}
}

func (x *VisualizeJobRequest) GetJobId() *UUID {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *VisualizeJobRequest) GetRenderOptions() *RenderOptions {
	if x != nil {
		return x.RenderOptions
	}
	return nil
}

func (x *VisualizeJobRequest) GetTheme() WorkflowDiagramTheme {
	if x != nil {
		return x.Theme
	}
	return WorkflowDiagramTheme_WORKFLOW_DIAGRAM_THEME_UNSPECIFIED
}

func (x *VisualizeJobRequest) GetIncludeJobName() bool {
	if x != nil {
		return x.IncludeJobName
	}
	return false
}

// ListJobsRequest requests a list of jobs.
type ListJobsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID interval for which jobs are requested.
	IdInterval *IDInterval `protobuf:"bytes,1,opt,name=id_interval,json=idInterval,proto3" json:"id_interval,omitempty"`
	// The pagination parameters for this request.
	Page          *Pagination `protobuf:"bytes,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsRequest) Reset() {
	*x = ListJobsRequest{}
	mi := &file_workflows_v1_job_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsRequest) ProtoMessage() {}

func (x *ListJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsRequest.ProtoReflect.Descriptor instead.
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{7}
}

func (x *ListJobsRequest) GetIdInterval() *IDInterval {
	if x != nil {
		return x.IdInterval
	}
	return nil
}

func (x *ListJobsRequest) GetPage() *Pagination {
	if x != nil {
		return x.Page
	}
	return nil
}

// FilterJobsRequest requests a list of filtered jobs.
type FilterJobsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID interval for which jobs are requested.
	IdInterval *IDInterval `protobuf:"bytes,1,opt,name=id_interval,json=idInterval,proto3" json:"id_interval,omitempty"`
	// The pagination parameters for this request.
	Page *Pagination `protobuf:"bytes,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
	// Filter jobs by automation id.
	AutomationId  *UUID `protobuf:"bytes,3,opt,name=automation_id,json=automationId,proto3,oneof" json:"automation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterJobsRequest) Reset() {
	*x = FilterJobsRequest{}
	mi := &file_workflows_v1_job_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterJobsRequest) ProtoMessage() {}

func (x *FilterJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterJobsRequest.ProtoReflect.Descriptor instead.
func (*FilterJobsRequest) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{8}
}

func (x *FilterJobsRequest) GetIdInterval() *IDInterval {
	if x != nil {
		return x.IdInterval
	}
	return nil
}

func (x *FilterJobsRequest) GetPage() *Pagination {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *FilterJobsRequest) GetAutomationId() *UUID {
	if x != nil {
		return x.AutomationId
	}
	return nil
}

// A list of jobs.
type ListJobsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The jobs.
	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	// The pagination parameters for the next page.
	NextPage      *Pagination `protobuf:"bytes,3,opt,name=next_page,json=nextPage,proto3,oneof" json:"next_page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsResponse) Reset() {
	*x = ListJobsResponse{}
	mi := &file_workflows_v1_job_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsResponse) ProtoMessage() {}

func (x *ListJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsResponse.ProtoReflect.Descriptor instead.
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{9}
}

func (x *ListJobsResponse) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *ListJobsResponse) GetNextPage() *Pagination {
	if x != nil {
		return x.NextPage
	}
	return nil
}

// GetJobPrototypeRequest requests a clone prototype of a job.
type GetJobPrototypeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the job to get a clone prototype for.
	JobId         *UUID `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobPrototypeRequest) Reset() {
	*x = GetJobPrototypeRequest{}
	mi := &file_workflows_v1_job_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobPrototypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobPrototypeRequest) ProtoMessage() {}

func (x *GetJobPrototypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobPrototypeRequest.ProtoReflect.Descriptor instead.
func (*GetJobPrototypeRequest) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{10}
}

func (x *GetJobPrototypeRequest) GetJobId() *UUID {
	if x != nil {
		return x.JobId
	}
	return nil
}

// A clone prototype of a job.
type GetJobPrototypeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The root tasks of the job.
	RootTasks []*TaskSubmission `protobuf:"bytes,1,rep,name=root_tasks,json=rootTasks,proto3" json:"root_tasks,omitempty"`
	// The name of the job.
	JobName       string `protobuf:"bytes,2,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobPrototypeResponse) Reset() {
	*x = GetJobPrototypeResponse{}
	mi := &file_workflows_v1_job_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobPrototypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobPrototypeResponse) ProtoMessage() {}

func (x *GetJobPrototypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobPrototypeResponse.ProtoReflect.Descriptor instead.
func (*GetJobPrototypeResponse) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{11}
}

func (x *GetJobPrototypeResponse) GetRootTasks() []*TaskSubmission {
	if x != nil {
		return x.RootTasks
	}
	return nil
}

func (x *GetJobPrototypeResponse) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

// CloneJobRequest requests a clone of a job.
type CloneJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the job to clone.
	JobId *UUID `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// The updated root tasks of the job.
	RootTasksOverrides []*TaskSubmission `protobuf:"bytes,2,rep,name=root_tasks_overrides,json=rootTasksOverrides,proto3" json:"root_tasks_overrides,omitempty"`
	// The name of the job.
	JobName       string `protobuf:"bytes,3,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloneJobRequest) Reset() {
	*x = CloneJobRequest{}
	mi := &file_workflows_v1_job_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneJobRequest) ProtoMessage() {}

func (x *CloneJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_v1_job_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneJobRequest.ProtoReflect.Descriptor instead.
func (*CloneJobRequest) Descriptor() ([]byte, []int) {
	return file_workflows_v1_job_proto_rawDescGZIP(), []int{12}
}

func (x *CloneJobRequest) GetJobId() *UUID {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *CloneJobRequest) GetRootTasksOverrides() []*TaskSubmission {
	if x != nil {
		return x.RootTasksOverrides
	}
	return nil
}

func (x *CloneJobRequest) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

var File_workflows_v1_job_proto protoreflect.FileDescriptor

const file_workflows_v1_job_proto_rawDesc = "" +
	"\n" +
	"\x16workflows/v1/job.proto\x12\fworkflows.v1\x1a\x17workflows/v1/core.proto\x1a\x1aworkflows/v1/diagram.proto\"\xbd\x01\n" +
	"\x10SubmitJobRequest\x122\n" +
	"\x05tasks\x18\x01 \x03(\v2\x1c.workflows.v1.TaskSubmissionR\x05tasks\x12\x19\n" +
	"\bjob_name\x18\x02 \x01(\tR\ajobName\x12!\n" +
	"\ftrace_parent\x18\x03 \x01(\tR\vtraceParent\x127\n" +
	"\rautomation_id\x18\x04 \x01(\v2\x12.workflows.v1.UUIDR\fautomationId\":\n" +
	"\rGetJobRequest\x12)\n" +
	"\x06job_id\x18\x01 \x01(\v2\x12.workflows.v1.UUIDR\x05jobId\"<\n" +
	"\x0fRetryJobRequest\x12)\n" +
	"\x06job_id\x18\x01 \x01(\v2\x12.workflows.v1.UUIDR\x05jobId\"F\n" +
	"\x10RetryJobResponse\x122\n" +
	"\x15num_tasks_rescheduled\x18\x01 \x01(\x03R\x13numTasksRescheduled\"=\n" +
	"\x10CancelJobRequest\x12)\n" +
	"\x06job_id\x18\x01 \x01(\v2\x12.workflows.v1.UUIDR\x05jobId\"\x13\n" +
	"\x11CancelJobResponse\"\xe8\x01\n" +
	"\x13VisualizeJobRequest\x12)\n" +
	"\x06job_id\x18\x01 \x01(\v2\x12.workflows.v1.UUIDR\x05jobId\x12B\n" +
	"\x0erender_options\x18\x02 \x01(\v2\x1b.workflows.v1.RenderOptionsR\rrenderOptions\x128\n" +
	"\x05theme\x18\x03 \x01(\x0e2\".workflows.v1.WorkflowDiagramThemeR\x05theme\x12(\n" +
	"\x10include_job_name\x18\x04 \x01(\bR\x0eincludeJobName\"\x88\x01\n" +
	"\x0fListJobsRequest\x129\n" +
	"\vid_interval\x18\x01 \x01(\v2\x18.workflows.v1.IDIntervalR\n" +
	"idInterval\x121\n" +
	"\x04page\x18\x02 \x01(\v2\x18.workflows.v1.PaginationH\x00R\x04page\x88\x01\x01B\a\n" +
	"\x05_page\"\xda\x01\n" +
	"\x11FilterJobsRequest\x129\n" +
	"\vid_interval\x18\x01 \x01(\v2\x18.workflows.v1.IDIntervalR\n" +
	"idInterval\x121\n" +
	"\x04page\x18\x02 \x01(\v2\x18.workflows.v1.PaginationH\x00R\x04page\x88\x01\x01\x12<\n" +
	"\rautomation_id\x18\x03 \x01(\v2\x12.workflows.v1.UUIDH\x01R\fautomationId\x88\x01\x01B\a\n" +
	"\x05_pageB\x10\n" +
	"\x0e_automation_id\"\x83\x01\n" +
	"\x10ListJobsResponse\x12%\n" +
	"\x04jobs\x18\x01 \x03(\v2\x11.workflows.v1.JobR\x04jobs\x12:\n" +
	"\tnext_page\x18\x03 \x01(\v2\x18.workflows.v1.PaginationH\x00R\bnextPage\x88\x01\x01B\f\n" +
	"\n" +
	"_next_page\"C\n" +
	"\x16GetJobPrototypeRequest\x12)\n" +
	"\x06job_id\x18\x01 \x01(\v2\x12.workflows.v1.UUIDR\x05jobId\"q\n" +
	"\x17GetJobPrototypeResponse\x12;\n" +
	"\n" +
	"root_tasks\x18\x01 \x03(\v2\x1c.workflows.v1.TaskSubmissionR\trootTasks\x12\x19\n" +
	"\bjob_name\x18\x02 \x01(\tR\ajobName\"\xa7\x01\n" +
	"\x0fCloneJobRequest\x12)\n" +
	"\x06job_id\x18\x01 \x01(\v2\x12.workflows.v1.UUIDR\x05jobId\x12N\n" +
	"\x14root_tasks_overrides\x18\x02 \x03(\v2\x1c.workflows.v1.TaskSubmissionR\x12rootTasksOverrides\x12\x19\n" +
	"\bjob_name\x18\x03 \x01(\tR\ajobName*\xd4\x01\n" +
	"\x14WorkflowDiagramTheme\x12&\n" +
	"\"WORKFLOW_DIAGRAM_THEME_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cWORKFLOW_DIAGRAM_THEME_LIGHT\x10\x01\x12\x1f\n" +
	"\x1bWORKFLOW_DIAGRAM_THEME_DARK\x10\x02\x12(\n" +
	"$WORKFLOW_DIAGRAM_THEME_CONSOLE_LIGHT\x10\x03\x12'\n" +
	"#WORKFLOW_DIAGRAM_THEME_CONSOLE_DARK\x10\x042\xa1\x05\n" +
	"\n" +
	"JobService\x12>\n" +
	"\tSubmitJob\x12\x1e.workflows.v1.SubmitJobRequest\x1a\x11.workflows.v1.Job\x128\n" +
	"\x06GetJob\x12\x1b.workflows.v1.GetJobRequest\x1a\x11.workflows.v1.Job\x12I\n" +
	"\bRetryJob\x12\x1d.workflows.v1.RetryJobRequest\x1a\x1e.workflows.v1.RetryJobResponse\x12L\n" +
	"\tCancelJob\x12\x1e.workflows.v1.CancelJobRequest\x1a\x1f.workflows.v1.CancelJobResponse\x12H\n" +
	"\fVisualizeJob\x12!.workflows.v1.VisualizeJobRequest\x1a\x15.workflows.v1.Diagram\x12I\n" +
	"\bListJobs\x12\x1d.workflows.v1.ListJobsRequest\x1a\x1e.workflows.v1.ListJobsResponse\x12M\n" +
	"\n" +
	"FilterJobs\x12\x1f.workflows.v1.FilterJobsRequest\x1a\x1e.workflows.v1.ListJobsResponse\x12^\n" +
	"\x0fGetJobPrototype\x12$.workflows.v1.GetJobPrototypeRequest\x1a%.workflows.v1.GetJobPrototypeResponse\x12<\n" +
	"\bCloneJob\x12\x1d.workflows.v1.CloneJobRequest\x1a\x11.workflows.v1.JobB\xb1\x01\n" +
	"\x10com.workflows.v1B\bJobProtoP\x01ZBgithub.com/tilebox/tilebox-go/protogen/go/workflows/v1;workflowsv1\xa2\x02\x03WXX\xaa\x02\fWorkflows.V1\xca\x02\fWorkflows\\V1\xe2\x02\x18Workflows\\V1\\GPBMetadata\xea\x02\rWorkflows::V1b\x06proto3"

var (
	file_workflows_v1_job_proto_rawDescOnce sync.Once
	file_workflows_v1_job_proto_rawDescData []byte
)

func file_workflows_v1_job_proto_rawDescGZIP() []byte {
	file_workflows_v1_job_proto_rawDescOnce.Do(func() {
		file_workflows_v1_job_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_workflows_v1_job_proto_rawDesc), len(file_workflows_v1_job_proto_rawDesc)))
	})
	return file_workflows_v1_job_proto_rawDescData
}

var file_workflows_v1_job_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_workflows_v1_job_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_workflows_v1_job_proto_goTypes = []any{
	(WorkflowDiagramTheme)(0),       // 0: workflows.v1.WorkflowDiagramTheme
	(*SubmitJobRequest)(nil),        // 1: workflows.v1.SubmitJobRequest
	(*GetJobRequest)(nil),           // 2: workflows.v1.GetJobRequest
	(*RetryJobRequest)(nil),         // 3: workflows.v1.RetryJobRequest
	(*RetryJobResponse)(nil),        // 4: workflows.v1.RetryJobResponse
	(*CancelJobRequest)(nil),        // 5: workflows.v1.CancelJobRequest
	(*CancelJobResponse)(nil),       // 6: workflows.v1.CancelJobResponse
	(*VisualizeJobRequest)(nil),     // 7: workflows.v1.VisualizeJobRequest
	(*ListJobsRequest)(nil),         // 8: workflows.v1.ListJobsRequest
	(*FilterJobsRequest)(nil),       // 9: workflows.v1.FilterJobsRequest
	(*ListJobsResponse)(nil),        // 10: workflows.v1.ListJobsResponse
	(*GetJobPrototypeRequest)(nil),  // 11: workflows.v1.GetJobPrototypeRequest
	(*GetJobPrototypeResponse)(nil), // 12: workflows.v1.GetJobPrototypeResponse
	(*CloneJobRequest)(nil),         // 13: workflows.v1.CloneJobRequest
	(*TaskSubmission)(nil),          // 14: workflows.v1.TaskSubmission
	(*UUID)(nil),                    // 15: workflows.v1.UUID
	(*RenderOptions)(nil),           // 16: workflows.v1.RenderOptions
	(*IDInterval)(nil),              // 17: workflows.v1.IDInterval
	(*Pagination)(nil),              // 18: workflows.v1.Pagination
	(*Job)(nil),                     // 19: workflows.v1.Job
	(*Diagram)(nil),                 // 20: workflows.v1.Diagram
}
var file_workflows_v1_job_proto_depIdxs = []int32{
	14, // 0: workflows.v1.SubmitJobRequest.tasks:type_name -> workflows.v1.TaskSubmission
	15, // 1: workflows.v1.SubmitJobRequest.automation_id:type_name -> workflows.v1.UUID
	15, // 2: workflows.v1.GetJobRequest.job_id:type_name -> workflows.v1.UUID
	15, // 3: workflows.v1.RetryJobRequest.job_id:type_name -> workflows.v1.UUID
	15, // 4: workflows.v1.CancelJobRequest.job_id:type_name -> workflows.v1.UUID
	15, // 5: workflows.v1.VisualizeJobRequest.job_id:type_name -> workflows.v1.UUID
	16, // 6: workflows.v1.VisualizeJobRequest.render_options:type_name -> workflows.v1.RenderOptions
	0,  // 7: workflows.v1.VisualizeJobRequest.theme:type_name -> workflows.v1.WorkflowDiagramTheme
	17, // 8: workflows.v1.ListJobsRequest.id_interval:type_name -> workflows.v1.IDInterval
	18, // 9: workflows.v1.ListJobsRequest.page:type_name -> workflows.v1.Pagination
	17, // 10: workflows.v1.FilterJobsRequest.id_interval:type_name -> workflows.v1.IDInterval
	18, // 11: workflows.v1.FilterJobsRequest.page:type_name -> workflows.v1.Pagination
	15, // 12: workflows.v1.FilterJobsRequest.automation_id:type_name -> workflows.v1.UUID
	19, // 13: workflows.v1.ListJobsResponse.jobs:type_name -> workflows.v1.Job
	18, // 14: workflows.v1.ListJobsResponse.next_page:type_name -> workflows.v1.Pagination
	15, // 15: workflows.v1.GetJobPrototypeRequest.job_id:type_name -> workflows.v1.UUID
	14, // 16: workflows.v1.GetJobPrototypeResponse.root_tasks:type_name -> workflows.v1.TaskSubmission
	15, // 17: workflows.v1.CloneJobRequest.job_id:type_name -> workflows.v1.UUID
	14, // 18: workflows.v1.CloneJobRequest.root_tasks_overrides:type_name -> workflows.v1.TaskSubmission
	1,  // 19: workflows.v1.JobService.SubmitJob:input_type -> workflows.v1.SubmitJobRequest
	2,  // 20: workflows.v1.JobService.GetJob:input_type -> workflows.v1.GetJobRequest
	3,  // 21: workflows.v1.JobService.RetryJob:input_type -> workflows.v1.RetryJobRequest
	5,  // 22: workflows.v1.JobService.CancelJob:input_type -> workflows.v1.CancelJobRequest
	7,  // 23: workflows.v1.JobService.VisualizeJob:input_type -> workflows.v1.VisualizeJobRequest
	8,  // 24: workflows.v1.JobService.ListJobs:input_type -> workflows.v1.ListJobsRequest
	9,  // 25: workflows.v1.JobService.FilterJobs:input_type -> workflows.v1.FilterJobsRequest
	11, // 26: workflows.v1.JobService.GetJobPrototype:input_type -> workflows.v1.GetJobPrototypeRequest
	13, // 27: workflows.v1.JobService.CloneJob:input_type -> workflows.v1.CloneJobRequest
	19, // 28: workflows.v1.JobService.SubmitJob:output_type -> workflows.v1.Job
	19, // 29: workflows.v1.JobService.GetJob:output_type -> workflows.v1.Job
	4,  // 30: workflows.v1.JobService.RetryJob:output_type -> workflows.v1.RetryJobResponse
	6,  // 31: workflows.v1.JobService.CancelJob:output_type -> workflows.v1.CancelJobResponse
	20, // 32: workflows.v1.JobService.VisualizeJob:output_type -> workflows.v1.Diagram
	10, // 33: workflows.v1.JobService.ListJobs:output_type -> workflows.v1.ListJobsResponse
	10, // 34: workflows.v1.JobService.FilterJobs:output_type -> workflows.v1.ListJobsResponse
	12, // 35: workflows.v1.JobService.GetJobPrototype:output_type -> workflows.v1.GetJobPrototypeResponse
	19, // 36: workflows.v1.JobService.CloneJob:output_type -> workflows.v1.Job
	28, // [28:37] is the sub-list for method output_type
	19, // [19:28] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_workflows_v1_job_proto_init() }
func file_workflows_v1_job_proto_init() {
	if File_workflows_v1_job_proto != nil {
		return
	}
	file_workflows_v1_core_proto_init()
	file_workflows_v1_diagram_proto_init()
	file_workflows_v1_job_proto_msgTypes[7].OneofWrappers = []any{}
	file_workflows_v1_job_proto_msgTypes[8].OneofWrappers = []any{}
	file_workflows_v1_job_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_workflows_v1_job_proto_rawDesc), len(file_workflows_v1_job_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_workflows_v1_job_proto_goTypes,
		DependencyIndexes: file_workflows_v1_job_proto_depIdxs,
		EnumInfos:         file_workflows_v1_job_proto_enumTypes,
		MessageInfos:      file_workflows_v1_job_proto_msgTypes,
	}.Build()
	File_workflows_v1_job_proto = out.File
	file_workflows_v1_job_proto_goTypes = nil
	file_workflows_v1_job_proto_depIdxs = nil
}
