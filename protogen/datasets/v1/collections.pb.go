// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: datasets/v1/collections.proto

package datasetsv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/tilebox/tilebox-go/protogen/tilebox/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateCollectionRequest is used to create a new collection.
type CreateCollectionRequest struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DatasetId *v1.ID                 `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId"`
	xxx_hidden_Name      string                 `protobuf:"bytes,2,opt,name=name"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreateCollectionRequest) Reset() {
	*x = CreateCollectionRequest{}
	mi := &file_datasets_v1_collections_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionRequest) ProtoMessage() {}

func (x *CreateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datasets_v1_collections_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateCollectionRequest) GetDatasetId() *v1.ID {
	if x != nil {
		return x.xxx_hidden_DatasetId
	}
	return nil
}

func (x *CreateCollectionRequest) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *CreateCollectionRequest) SetDatasetId(v *v1.ID) {
	x.xxx_hidden_DatasetId = v
}

func (x *CreateCollectionRequest) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *CreateCollectionRequest) HasDatasetId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DatasetId != nil
}

func (x *CreateCollectionRequest) ClearDatasetId() {
	x.xxx_hidden_DatasetId = nil
}

type CreateCollectionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The dataset id where the collection should be created.
	DatasetId *v1.ID
	// The name of the collection to create.
	Name string
}

func (b0 CreateCollectionRequest_builder) Build() *CreateCollectionRequest {
	m0 := &CreateCollectionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DatasetId = b.DatasetId
	x.xxx_hidden_Name = b.Name
	return m0
}

// GetCollectionByNameRequest contains the request parameters for retrieving a single collection by its name.
type GetCollectionByNameRequest struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CollectionName   string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName"`
	xxx_hidden_WithAvailability bool                   `protobuf:"varint,2,opt,name=with_availability,json=withAvailability"`
	xxx_hidden_WithCount        bool                   `protobuf:"varint,3,opt,name=with_count,json=withCount"`
	xxx_hidden_DatasetId        *v1.ID                 `protobuf:"bytes,4,opt,name=dataset_id,json=datasetId"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *GetCollectionByNameRequest) Reset() {
	*x = GetCollectionByNameRequest{}
	mi := &file_datasets_v1_collections_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollectionByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionByNameRequest) ProtoMessage() {}

func (x *GetCollectionByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datasets_v1_collections_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetCollectionByNameRequest) GetCollectionName() string {
	if x != nil {
		return x.xxx_hidden_CollectionName
	}
	return ""
}

func (x *GetCollectionByNameRequest) GetWithAvailability() bool {
	if x != nil {
		return x.xxx_hidden_WithAvailability
	}
	return false
}

func (x *GetCollectionByNameRequest) GetWithCount() bool {
	if x != nil {
		return x.xxx_hidden_WithCount
	}
	return false
}

func (x *GetCollectionByNameRequest) GetDatasetId() *v1.ID {
	if x != nil {
		return x.xxx_hidden_DatasetId
	}
	return nil
}

func (x *GetCollectionByNameRequest) SetCollectionName(v string) {
	x.xxx_hidden_CollectionName = v
}

func (x *GetCollectionByNameRequest) SetWithAvailability(v bool) {
	x.xxx_hidden_WithAvailability = v
}

func (x *GetCollectionByNameRequest) SetWithCount(v bool) {
	x.xxx_hidden_WithCount = v
}

func (x *GetCollectionByNameRequest) SetDatasetId(v *v1.ID) {
	x.xxx_hidden_DatasetId = v
}

func (x *GetCollectionByNameRequest) HasDatasetId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DatasetId != nil
}

func (x *GetCollectionByNameRequest) ClearDatasetId() {
	x.xxx_hidden_DatasetId = nil
}

type GetCollectionByNameRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The name of the collection to retrieve.
	CollectionName string
	// If true, the response will include the availability interval.
	WithAvailability bool
	// If true, the response will include the number of entries.
	WithCount bool
	// The dataset id.
	DatasetId *v1.ID
}

func (b0 GetCollectionByNameRequest_builder) Build() *GetCollectionByNameRequest {
	m0 := &GetCollectionByNameRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CollectionName = b.CollectionName
	x.xxx_hidden_WithAvailability = b.WithAvailability
	x.xxx_hidden_WithCount = b.WithCount
	x.xxx_hidden_DatasetId = b.DatasetId
	return m0
}

// DeleteCollectionRequest contains the request parameters for deleting a single collection.
type DeleteCollectionRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CollectionId *v1.ID                 `protobuf:"bytes,1,opt,name=collection_id,json=collectionId"`
	xxx_hidden_DatasetId    *v1.ID                 `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeleteCollectionRequest) Reset() {
	*x = DeleteCollectionRequest{}
	mi := &file_datasets_v1_collections_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionRequest) ProtoMessage() {}

func (x *DeleteCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datasets_v1_collections_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteCollectionRequest) GetCollectionId() *v1.ID {
	if x != nil {
		return x.xxx_hidden_CollectionId
	}
	return nil
}

func (x *DeleteCollectionRequest) GetDatasetId() *v1.ID {
	if x != nil {
		return x.xxx_hidden_DatasetId
	}
	return nil
}

func (x *DeleteCollectionRequest) SetCollectionId(v *v1.ID) {
	x.xxx_hidden_CollectionId = v
}

func (x *DeleteCollectionRequest) SetDatasetId(v *v1.ID) {
	x.xxx_hidden_DatasetId = v
}

func (x *DeleteCollectionRequest) HasCollectionId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CollectionId != nil
}

func (x *DeleteCollectionRequest) HasDatasetId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DatasetId != nil
}

func (x *DeleteCollectionRequest) ClearCollectionId() {
	x.xxx_hidden_CollectionId = nil
}

func (x *DeleteCollectionRequest) ClearDatasetId() {
	x.xxx_hidden_DatasetId = nil
}

type DeleteCollectionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The id of the collection to delete.
	CollectionId *v1.ID
	// The dataset id.
	DatasetId *v1.ID
}

func (b0 DeleteCollectionRequest_builder) Build() *DeleteCollectionRequest {
	m0 := &DeleteCollectionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CollectionId = b.CollectionId
	x.xxx_hidden_DatasetId = b.DatasetId
	return m0
}

// DeleteCollectionResponse is the response to DeleteCollectionRequest.
type DeleteCollectionResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCollectionResponse) Reset() {
	*x = DeleteCollectionResponse{}
	mi := &file_datasets_v1_collections_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionResponse) ProtoMessage() {}

func (x *DeleteCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datasets_v1_collections_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DeleteCollectionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DeleteCollectionResponse_builder) Build() *DeleteCollectionResponse {
	m0 := &DeleteCollectionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// ListCollectionsRequest contains the request parameters
// for retrieving a list of all available collections for a given dataset.
type ListCollectionsRequest struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DatasetId        *v1.ID                 `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId"`
	xxx_hidden_WithAvailability bool                   `protobuf:"varint,2,opt,name=with_availability,json=withAvailability"`
	xxx_hidden_WithCount        bool                   `protobuf:"varint,3,opt,name=with_count,json=withCount"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ListCollectionsRequest) Reset() {
	*x = ListCollectionsRequest{}
	mi := &file_datasets_v1_collections_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsRequest) ProtoMessage() {}

func (x *ListCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datasets_v1_collections_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListCollectionsRequest) GetDatasetId() *v1.ID {
	if x != nil {
		return x.xxx_hidden_DatasetId
	}
	return nil
}

func (x *ListCollectionsRequest) GetWithAvailability() bool {
	if x != nil {
		return x.xxx_hidden_WithAvailability
	}
	return false
}

func (x *ListCollectionsRequest) GetWithCount() bool {
	if x != nil {
		return x.xxx_hidden_WithCount
	}
	return false
}

func (x *ListCollectionsRequest) SetDatasetId(v *v1.ID) {
	x.xxx_hidden_DatasetId = v
}

func (x *ListCollectionsRequest) SetWithAvailability(v bool) {
	x.xxx_hidden_WithAvailability = v
}

func (x *ListCollectionsRequest) SetWithCount(v bool) {
	x.xxx_hidden_WithCount = v
}

func (x *ListCollectionsRequest) HasDatasetId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DatasetId != nil
}

func (x *ListCollectionsRequest) ClearDatasetId() {
	x.xxx_hidden_DatasetId = nil
}

type ListCollectionsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The dataset id.
	DatasetId *v1.ID
	// If true, the response will include the availability interval.
	WithAvailability bool
	// If true, the response will include the number of entries.
	WithCount bool
}

func (b0 ListCollectionsRequest_builder) Build() *ListCollectionsRequest {
	m0 := &ListCollectionsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DatasetId = b.DatasetId
	x.xxx_hidden_WithAvailability = b.WithAvailability
	x.xxx_hidden_WithCount = b.WithCount
	return m0
}

var File_datasets_v1_collections_proto protoreflect.FileDescriptor

const file_datasets_v1_collections_proto_rawDesc = "" +
	"\n" +
	"\x1ddatasets/v1/collections.proto\x12\vdatasets.v1\x1a\x1bbuf/validate/validate.proto\x1a\x16datasets/v1/core.proto\x1a\x13tilebox/v1/id.proto\"m\n" +
	"\x17CreateCollectionRequest\x125\n" +
	"\n" +
	"dataset_id\x18\x01 \x01(\v2\x0e.tilebox.v1.IDB\x06\xbaH\x03\xc8\x01\x01R\tdatasetId\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\"\xd1\x01\n" +
	"\x1aGetCollectionByNameRequest\x120\n" +
	"\x0fcollection_name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x0ecollectionName\x12+\n" +
	"\x11with_availability\x18\x02 \x01(\bR\x10withAvailability\x12\x1d\n" +
	"\n" +
	"with_count\x18\x03 \x01(\bR\twithCount\x125\n" +
	"\n" +
	"dataset_id\x18\x04 \x01(\v2\x0e.tilebox.v1.IDB\x06\xbaH\x03\xc8\x01\x01R\tdatasetId\"\x8d\x01\n" +
	"\x17DeleteCollectionRequest\x12;\n" +
	"\rcollection_id\x18\x01 \x01(\v2\x0e.tilebox.v1.IDB\x06\xbaH\x03\xc8\x01\x01R\fcollectionId\x125\n" +
	"\n" +
	"dataset_id\x18\x02 \x01(\v2\x0e.tilebox.v1.IDB\x06\xbaH\x03\xc8\x01\x01R\tdatasetId\"\x1a\n" +
	"\x18DeleteCollectionResponse\"\x9b\x01\n" +
	"\x16ListCollectionsRequest\x125\n" +
	"\n" +
	"dataset_id\x18\x01 \x01(\v2\x0e.tilebox.v1.IDB\x06\xbaH\x03\xc8\x01\x01R\tdatasetId\x12+\n" +
	"\x11with_availability\x18\x02 \x01(\bR\x10withAvailability\x12\x1d\n" +
	"\n" +
	"with_count\x18\x03 \x01(\bR\twithCount2\x86\x03\n" +
	"\x11CollectionService\x12W\n" +
	"\x10CreateCollection\x12$.datasets.v1.CreateCollectionRequest\x1a\x1b.datasets.v1.CollectionInfo\"\x00\x12]\n" +
	"\x13GetCollectionByName\x12'.datasets.v1.GetCollectionByNameRequest\x1a\x1b.datasets.v1.CollectionInfo\"\x00\x12a\n" +
	"\x10DeleteCollection\x12$.datasets.v1.DeleteCollectionRequest\x1a%.datasets.v1.DeleteCollectionResponse\"\x00\x12V\n" +
	"\x0fListCollections\x12#.datasets.v1.ListCollectionsRequest\x1a\x1c.datasets.v1.CollectionInfos\"\x00B\xb4\x01\n" +
	"\x0fcom.datasets.v1B\x10CollectionsProtoP\x01Z=github.com/tilebox/tilebox-go/protogen/datasets/v1;datasetsv1\xa2\x02\x03DXX\xaa\x02\vDatasets.V1\xca\x02\vDatasets\\V1\xe2\x02\x17Datasets\\V1\\GPBMetadata\xea\x02\fDatasets::V1\x92\x03\x02\b\x02b\beditionsp\xe8\a"

var file_datasets_v1_collections_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_datasets_v1_collections_proto_goTypes = []any{
	(*CreateCollectionRequest)(nil),    // 0: datasets.v1.CreateCollectionRequest
	(*GetCollectionByNameRequest)(nil), // 1: datasets.v1.GetCollectionByNameRequest
	(*DeleteCollectionRequest)(nil),    // 2: datasets.v1.DeleteCollectionRequest
	(*DeleteCollectionResponse)(nil),   // 3: datasets.v1.DeleteCollectionResponse
	(*ListCollectionsRequest)(nil),     // 4: datasets.v1.ListCollectionsRequest
	(*v1.ID)(nil),                      // 5: tilebox.v1.ID
	(*CollectionInfo)(nil),             // 6: datasets.v1.CollectionInfo
	(*CollectionInfos)(nil),            // 7: datasets.v1.CollectionInfos
}
var file_datasets_v1_collections_proto_depIdxs = []int32{
	5, // 0: datasets.v1.CreateCollectionRequest.dataset_id:type_name -> tilebox.v1.ID
	5, // 1: datasets.v1.GetCollectionByNameRequest.dataset_id:type_name -> tilebox.v1.ID
	5, // 2: datasets.v1.DeleteCollectionRequest.collection_id:type_name -> tilebox.v1.ID
	5, // 3: datasets.v1.DeleteCollectionRequest.dataset_id:type_name -> tilebox.v1.ID
	5, // 4: datasets.v1.ListCollectionsRequest.dataset_id:type_name -> tilebox.v1.ID
	0, // 5: datasets.v1.CollectionService.CreateCollection:input_type -> datasets.v1.CreateCollectionRequest
	1, // 6: datasets.v1.CollectionService.GetCollectionByName:input_type -> datasets.v1.GetCollectionByNameRequest
	2, // 7: datasets.v1.CollectionService.DeleteCollection:input_type -> datasets.v1.DeleteCollectionRequest
	4, // 8: datasets.v1.CollectionService.ListCollections:input_type -> datasets.v1.ListCollectionsRequest
	6, // 9: datasets.v1.CollectionService.CreateCollection:output_type -> datasets.v1.CollectionInfo
	6, // 10: datasets.v1.CollectionService.GetCollectionByName:output_type -> datasets.v1.CollectionInfo
	3, // 11: datasets.v1.CollectionService.DeleteCollection:output_type -> datasets.v1.DeleteCollectionResponse
	7, // 12: datasets.v1.CollectionService.ListCollections:output_type -> datasets.v1.CollectionInfos
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_datasets_v1_collections_proto_init() }
func file_datasets_v1_collections_proto_init() {
	if File_datasets_v1_collections_proto != nil {
		return
	}
	file_datasets_v1_core_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_datasets_v1_collections_proto_rawDesc), len(file_datasets_v1_collections_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_datasets_v1_collections_proto_goTypes,
		DependencyIndexes: file_datasets_v1_collections_proto_depIdxs,
		MessageInfos:      file_datasets_v1_collections_proto_msgTypes,
	}.Build()
	File_datasets_v1_collections_proto = out.File
	file_datasets_v1_collections_proto_goTypes = nil
	file_datasets_v1_collections_proto_depIdxs = nil
}
