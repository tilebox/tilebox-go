// Proto messages and service definition for the APIs related to loading and quering data.

syntax = "proto3";

package datasets.v1;

import "datasets/v1/core.proto";

// IngestDatapointsRequest is used to ingest one or multiple datapoints into a collection.
message IngestDatapointsRequest {
  ID collection_id = 1;  // The collection to insert the datapoints into.
  Datapoints datapoints = 2;  // The datapoints to insert.

  // Whether to allow existing datapoints as part of the request. If true, datapoints that already exist will be
  // ignored, and the number of such existing datapoints will be returned in the response. If false, any datapoints
  // that already exist will result in an error. Setting this to true is useful for achieving idempotency (e.g.
  // allowing re-ingestion of datapoints that have already been ingested in the past).
  bool allow_existing = 3;
}

// IngestDatapointsResponse is the response to a IngestDatapointsRequest, indicating the number of datapoints that were
// ingested as well as the generated ids for those datapoints.
message IngestDatapointsResponse {
  int64 num_created = 1; // The number of datapoints that were created.
  int64 num_existing = 2; // The number of datapoints that were ignored because they already existed.
  repeated ID datapoint_ids = 3; // The ids of the datapoints in the same order as the datapoints in the request.
}

// DeleteDatapointsRequest is used to delete multiple datapoints from a collection.
message DeleteDatapointsRequest {
  ID collection_id = 1;
  repeated ID datapoint_ids = 2;
}

// DeleteDatapointsResponse is used to indicate that multiple datapoints were deleted.
message DeleteDatapointsResponse {
  int64 num_deleted = 1; // The number of datapoints that were deleted.
}


// DataIngestionService provides data access and querying capabilities for Tilebox datasets.
service DataIngestionService {
  rpc IngestDatapoints(IngestDatapointsRequest) returns (IngestDatapointsResponse) {}
  rpc DeleteDatapoints(DeleteDatapointsRequest) returns (DeleteDatapointsResponse) {}
}
