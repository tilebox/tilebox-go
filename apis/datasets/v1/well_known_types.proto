// This file contains some well-known types that are available to use for all dataset protobuf messages.
// They are specially handled in our client libraries and converted to the corresponding representations.

syntax = "proto3";
package datasets.v1;

// in addition to the well-known types defined here, we also include Timestamp and Duration
// buf:lint:ignore IMPORT_USED
import "google/protobuf/duration.proto";
// buf:lint:ignore IMPORT_USED
import "google/protobuf/timestamp.proto";

// Bytes field (in message)
message UUID {
  bytes uuid = 1;
}

// A 3D vector
message Vec3 {
  double x = 1;
  double y = 2;
  double z = 3;
}

// A quaternion
message Quaternion {
  double q1 = 1;
  double q2 = 2;
  double q3 = 3;
  double q4 = 4;
}

// LatLon is a pair of latitude and longitude values representing a point on the Earth's surface
message LatLon {
  double latitude = 1;
  double longitude = 2;
}

// LatLonAlt is a pair of latitude, longitude and altitude values representing a point on the Earth's surface
// While we could also use a Vec3 for this, we use a separate message to make the intent of the data clearer.
message LatLonAlt {
  double latitude = 1;
  double longitude = 2;
  double altitude = 3;
}

// Satellite flight direction
enum FlightDirection {
  FLIGHT_DIRECTION_UNSPECIFIED = 0;
  FLIGHT_DIRECTION_ASCENDING = 1;
  FLIGHT_DIRECTION_DESCENDING = 2;
}

// Observation direction
enum ObservationDirection {
  OBSERVATION_DIRECTION_UNSPECIFIED = 0;
  OBSERVATION_DIRECTION_LEFT = 1;
  OBSERVATION_DIRECTION_RIGHT = 2;
}

// The open data provider.
enum OpendataProvider {
  OPENDATA_PROVIDER_UNSPECIFIED = 0;
  OPENDATA_PROVIDER_ASF = 1; // Alaska Satellite Facility
  OPENDATA_PROVIDER_COPERNICUS_DATASPACE = 2; // Copernicus Dataspace
  OPENDATA_PROVIDER_UMBRA = 3; // Umbra Space
}

// https://www.earthdata.nasa.gov/engage/open-data-services-and-software/data-information-policy/data-levels
enum ProcessingLevel {
  PROCESSING_LEVEL_UNSPECIFIED = 0;
  PROCESSING_LEVEL_L0 = 12; // Raw data
  PROCESSING_LEVEL_L1 = 10;
  PROCESSING_LEVEL_L1A = 1;
  PROCESSING_LEVEL_L1B = 2;
  PROCESSING_LEVEL_L1C = 3;
  PROCESSING_LEVEL_L2 = 4;
  PROCESSING_LEVEL_L2A = 5;
  PROCESSING_LEVEL_L2B = 6;
  PROCESSING_LEVEL_L3 = 7;
  PROCESSING_LEVEL_L3A = 8;
  PROCESSING_LEVEL_L4 = 9;
  PROCESSING_LEVEL_NOT_APPLICABLE = 11;
}

/*
 * Messages relevant radar instruments
 */

// Polarization of the radar signal.
enum Polarization {
  // Horizontal transmit, Horizontal receive
  POLARIZATION_UNSPECIFIED = 0;
  POLARIZATION_HH = 1;
  POLARIZATION_HV = 2; // Horizontal transmit, Vertical receive
  POLARIZATION_VH = 3; // Vertical transmit, Horizontal receive
  POLARIZATION_VV = 4; // Vertical transmit, Vertical receive
  POLARIZATION_DUAL_HH = 5; // HH+HH
  POLARIZATION_DUAL_HV = 6; // HV+HV
  POLARIZATION_DUAL_VH = 7; // VH+VH
  POLARIZATION_DUAL_VV = 8; // VV+VV
  POLARIZATION_HH_HV = 9; // HH+HV
  POLARIZATION_VV_VH = 10; // VV+VH
}

// Sentinel-1 SAR (beam mode):
// https://sentinels.copernicus.eu/web/sentinel/technical-guides/sentinel-1-sar/sar-instrument/acquisition-modes
enum AcquisitionMode {
  ACQUISITION_MODE_UNSPECIFIED = 0; // In case it is not set for a dataset
  // used by Sentinel-1 SAR:
  ACQUISITION_MODE_SM = 1; // Strip Map
  ACQUISITION_MODE_EW = 2; // Extra Wide Swath
  ACQUISITION_MODE_IW = 3; // Interferometric Wide Swath
  ACQUISITION_MODE_WV = 4; // Wave
  // used by Umbra SAR:
  ACQUISITION_MODE_SPOTLIGHT = 10; // Spotlight
  // used by Sentinel 2 MSI:
  ACQUISITION_MODE_NOBS = 20; // Nominal Observation
  ACQUISITION_MODE_EOBS = 21; // Extended Observation
  ACQUISITION_MODE_DASC = 22; // Dark Signal Calibration
  ACQUISITION_MODE_ABSR = 23; // Absolute Radiometry Calibration
  ACQUISITION_MODE_VIC = 24; // Vicarious Calibration
  ACQUISITION_MODE_RAW = 25; // Raw Measurement
  ACQUISITION_MODE_TST = 26; // Test Mode
}

// Geometry is of a particular type, e.g. POINT, POLYGON, MULTIPOLYGON, encoded in a binary format
message Geometry {
  bytes wkb = 1; // well-known binary representation of a geometry
}
