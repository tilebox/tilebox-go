// The external API for managing triggers in the Workflows service.

syntax = "proto3";

package workflows.v1;

import "workflows/v1/core.proto";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// BucketType specifies a kind of storage bucket that we support.
enum BucketType {
  BUCKET_TYPE_UNSPECIFIED = 0;
  BUCKET_TYPE_GCS = 1;  // Google Cloud Storage
  BUCKET_TYPE_S3 = 2;  // Amazon Web Services S3
}

// Bucket is a storage bucket that can be used as a trigger source.
message Bucket {
  UUID id = 1;  // Unique identifier for the bucket
  string name = 2;  // The name of the bucket
  BucketType type = 3;  // The type of the bucket, e.g. GCS, S3
}

// Buckets is a list of storage buckets
message Buckets {
  repeated Bucket buckets = 1;
}

// BucketTrigger is NRT trigger registered on a bucket, that will trigger a task submission when an object matching
// the glob pattern is uploaded.
message BucketTrigger {
  UUID id = 1;  // Unique identifier for the trigger
  string name = 2;  // A human-readable name for the trigger
  Bucket bucket = 3;  // The bucket to watch
  string glob_pattern = 4;  // A glob pattern to match objects in the bucket
  TaskSubmission prototype = 5;  // The task submission to trigger
}

// BucketTriggerDetail is a bucket trigger with additional (auto-generated) information
message BucketTriggerDetail {
  BucketTrigger trigger = 1;  // The bucket trigger
  string trace_parent = 2;  // A common trace parent for all jobs / tasks created by this trigger
  optional UUID last_job = 3;  // The ID of the last job created by this trigger
}

// BucketTriggers is a list of bucket triggers
message BucketTriggers {
  repeated BucketTrigger triggers = 1;
}

message BucketTask {
  string bucket = 1;
  string object = 2;
  bytes args = 3;
}

// CronTrigger is a trigger that will trigger a task submission on a schedule.
message CronTrigger {
  UUID id = 1;  // Unique identifier for the trigger
  string name = 2; // A human-readable name for the trigger
  string schedule = 3;  // A cron schedule for the trigger, e.g. "0 0 * * *" (every day at midnight)
  TaskSubmission prototype = 4;  // The task submission to trigger
}

// CronTriggerDetail is a cron trigger with additional (auto-generated) information
message CronTriggerDetail {
  CronTrigger trigger = 1;  // The cron trigger
  string trace_parent = 2;  // A common trace parent for all jobs / tasks created by this trigger
  optional UUID last_job = 3;  // The ID of the last job created by this trigger
  google.protobuf.Timestamp next = 4;  // The next time the trigger will fire
}

// CronTriggers is a list of cron triggers
message CronTriggers {
  repeated CronTrigger triggers = 1;
}

message CronTask {
  google.protobuf.Timestamp trigger_time = 1;
  bytes args = 2;
}

// TriggerService is a service for managing NRT triggers. Currently, we support two types of triggers:
// - Bucket triggers, which trigger on object uploads to a storage bucket
// - Cron triggers, which trigger on a schedule
service TriggerService {
  // ListBuckets lists all the storage buckets that are available for use as bucket triggers.
  rpc ListBuckets(google.protobuf.Empty) returns (Buckets);

  // UpsertBucketTrigger creates or updates a bucket trigger in a namespace.
  rpc UpsertBucketTrigger(BucketTrigger) returns (BucketTrigger);
  // ListBucketTriggers lists all the bucket triggers that are currently registered in a namespace.
  rpc ListBucketTriggers(google.protobuf.Empty) returns (BucketTriggers);
  // DeleteBucketTrigger deletes a bucket trigger from a namespace.
  rpc DeleteBucketTrigger(UUID) returns (google.protobuf.Empty);

  // UpsertCronTrigger creates or updates a cron trigger in a namespace.
  rpc UpsertCronTrigger(CronTrigger) returns (CronTrigger);
  // ListCronTriggers lists all the cron triggers that are currently registered in a namespace.
  rpc ListCronTriggers(google.protobuf.Empty) returns (BucketTriggers);
  // DeleteCronTrigger deletes a cron trigger from a namespace.
  rpc DeleteCronTrigger(UUID) returns (google.protobuf.Empty);
}
